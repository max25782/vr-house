'use client'

import { useEffect, useRef, useState } from 'react'
import { Viewer } from '@photo-sphere-viewer/core'
import { GyroscopePlugin } from '@photo-sphere-viewer/gyroscope-plugin'
import { StereoPlugin } from '@photo-sphere-viewer/stereo-plugin'

interface PanoramaViewerProps {
  src: string
  initialFov?: number
}

export default function PanoramaViewer({ src, initialFov = 65 }: PanoramaViewerProps) {
  const containerRef = useRef<HTMLDivElement | null>(null)
  const viewerRef = useRef<Viewer | null>(null)
  const [isLoading, setIsLoading] = useState(true)
  const [error, setError] = useState<string | null>(null)

  useEffect(() => {
    const container = containerRef.current
    if (!container) return

    setIsLoading(true)
    setError(null)
    
    // –°–æ–∑–¥–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –∫–æ–ø–∏—é –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ —ç—Ñ—Ñ–µ–∫—Ç–µ
    let isMounted = true
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
    const loadingTimeout = setTimeout(() => {
      if (isMounted) {
        console.error('Panorama loading timeout exceeded')
        setError('–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏')
        setIsLoading(false)
      }
    }, 60000) // 60 —Å–µ–∫—É–Ω–¥ –º–∞–∫—Å–∏–º—É–º –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –ø–∞–Ω–æ—Ä–∞–º—ã
    console.log('Loading panorama from:', src)
    
    // Check if the panorama file exists
    fetch(src, { cache: 'no-cache' }) // –û—Ç–∫–ª—é—á–∞–µ–º –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ
      .then(response => {
        console.log('Panorama file fetch response:', response.status, response.statusText)
        if (!response.ok) {
          throw new Error('Panorama file not found')
        }

        try {
          console.log('Initializing equirectangular viewer with src:', src)
          
          // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–ª–∞–≥–∏–Ω—ã
          const plugins = []
          
          // –î–æ–±–∞–≤–ª—è–µ–º –ø–ª–∞–≥–∏–Ω –≥–∏—Ä–æ—Å–∫–æ–ø–∞
          plugins.push(GyroscopePlugin)
          
          // –î–æ–±–∞–≤–ª—è–µ–º –ø–ª–∞–≥–∏–Ω —Å—Ç–µ—Ä–µ–æ-—Ä–µ–∂–∏–º–∞
          plugins.push(StereoPlugin)
          
          const viewer = new Viewer({
            container,
            panorama: src + '?t=' + new Date().getTime(), // –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è
            plugins: plugins,
            navbar: ['autorotate', 'zoom', 'move', 'download', 'fullscreen', 'stereo'], // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
            defaultZoomLvl: 0,
            lang: {
              stereoNotification: '–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —ç–∫—Ä–∞–Ω, —á—Ç–æ–±—ã –≤–æ–π—Ç–∏ –≤ VR-—Ä–µ–∂–∏–º'
            },
            requestHeaders: {
              'Cache-Control': 'no-cache, no-store, must-revalidate',
              'Pragma': 'no-cache',
              'Expires': '0'
            }
          })

          viewer.addEventListener('ready', () => {
            if (isMounted) {
              setIsLoading(false)
            }
          })

          // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏ —á–µ—Ä–µ–∑ window.onerror
          const originalOnError = window.onerror
          window.onerror = (message) => {
            if (message.toString().includes('Photo Sphere Viewer')) {
              console.error('Panorama viewer error:', message)
              if (isMounted) {
                setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–∞–Ω–æ—Ä–∞–º—ã')
                setIsLoading(false)
              }
              return true // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–∫–∏
            }
            return originalOnError ? originalOnError.apply(window, arguments as any) : false
          }

          viewerRef.current = viewer
        } catch (e) {
          console.error('Failed to initialize panorama viewer:', e)
          if (isMounted) {
            setError('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä—â–∏–∫–∞')
            setIsLoading(false)
          }
        }
      })
      .catch(error => {
        console.error('Failed to load panorama:', error)
        if (isMounted) {
          setError('–ü–∞–Ω–æ—Ä–∞–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞')
          setIsLoading(false)
        }
      })

    return () => {
      // –û—á–∏—â–∞–µ–º —Ç–∞–π–º–∞—É—Ç –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
      clearTimeout(loadingTimeout)
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥, —á—Ç–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω
      isMounted = false
      
      if (viewerRef.current) {
        viewerRef.current.destroy()
        viewerRef.current = null
      }
    }
  }, [src, initialFov])

  return (
    <div ref={containerRef} className="h-dvh w-full bg-black relative">
      {isLoading && !error && (
        <div className="absolute inset-0 flex items-center justify-center text-white">
          <div className="text-center">
            <div className="w-16 h-16 border-4 border-blue-500 border-t-transparent rounded-full animate-spin mx-auto mb-4"></div>
            <p className="text-lg">–ó–∞–≥—Ä—É–∑–∫–∞ –ø–∞–Ω–æ—Ä–∞–º—ã...</p>
          </div>
        </div>
      )}
      {error && (
        <div className="absolute inset-0 flex items-center justify-center text-white">
          <div className="text-center">
            <div className="text-6xl mb-4">üì∑</div>
            <h3 className="text-xl font-semibold mb-2">{error}</h3>
            <p className="text-gray-400">–î–æ–±–∞–≤—å—Ç–µ —Ñ–∞–π–ª pano.jpg –≤ –ø–∞–ø–∫—É public/vr/test/</p>
          </div>
        </div>
      )}
    </div>
  )
}


